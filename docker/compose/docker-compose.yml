services:
  webrtc-oak-server:
    build: ../../  # Build from project root
    container_name: webrtc-oak-server
    ports:
      - "8000:8000"   # HTTP Client Server
      - "8765:8765"   # WebSocket Signaling Server
      - "8766:8766"   # OAK Camera Bridge
      - "8767:8767"   # GStreamer Bridge
    volumes:
      - ../../logs:/app/logs
      - /dev:/dev  # Full device access for OAK cameras
    devices:
      - /dev/bus/usb:/dev/bus/usb  # Alternative device mounting
    privileged: true  # Required for USB device access
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=${DISPLAY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/clients/oak_websocket_client.html"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: webrtc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../ssl:/etc/nginx/ssl  # Optional SSL certificates (create if needed)
    depends_on:
      - webrtc-oak-server
    restart: unless-stopped
    profiles:
      - production  # Only start with: docker-compose --profile production up

volumes:
  logs:
    driver: local
